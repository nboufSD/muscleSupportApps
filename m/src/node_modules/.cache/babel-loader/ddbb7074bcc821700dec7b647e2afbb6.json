{"ast":null,"code":"import { actionCreatorFactory } from \"../node_modules/typescript-fsa\";\nconst actionCreator = actionCreatorFactory();\nexport const testAction = actionCreator.async(\"TOGGLE_AUDIO_MUTING\");\nexport function test() {\n  return async (dispatch, getState) => {\n    const params = {};\n\n    try {\n      var _getState;\n\n      dispatch(testAction.started(params));\n      const state = (_getState = getState()) === null || _getState === void 0 ? void 0 : _getState.state;\n      console.log(state);\n      const result = {\n        testlog: \"test\"\n      };\n      dispatch(testAction.done({\n        result,\n        params\n      }));\n    } catch (error) {\n      dispatch(testAction.failed({\n        error: {\n          error\n        },\n        params\n      }));\n    }\n  };\n}","map":{"version":3,"sources":["/Users/mac/muscleSupportApps/m/src/action.ts"],"names":["actionCreatorFactory","actionCreator","testAction","async","test","dispatch","getState","params","started","state","console","log","result","testlog","done","error","failed"],"mappings":"AAGA,SAASA,oBAAT,QAAqC,gCAArC;AAKA,MAAMC,aAAa,GAAGD,oBAAoB,EAA1C;AAEA,OAAO,MAAME,UAAU,GAAGD,aAAa,CAACE,KAAd,CAIxB,qBAJwB,CAAnB;AAMP,OAAO,SAASC,IAAT,GAAgB;AACnB,SAAO,OACLC,QADK,EAELC,QAFK,KAGF;AACH,UAAMC,MAAM,GAAG,EAAf;;AAEA,QAAI;AAAA;;AACFF,MAAAA,QAAQ,CAACH,UAAU,CAACM,OAAX,CAAmBD,MAAnB,CAAD,CAAR;AAEA,YAAME,KAAK,gBAAGH,QAAQ,EAAX,8CAAG,UAAYG,KAA1B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,YAAMG,MAAM,GAAG;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAf;AAEAR,MAAAA,QAAQ,CAACH,UAAU,CAACY,IAAX,CAAgB;AAAEF,QAAAA,MAAF;AAAUL,QAAAA;AAAV,OAAhB,CAAD,CAAR;AACD,KATD,CASE,OAAOQ,KAAP,EAAc;AACdV,MAAAA,QAAQ,CAACH,UAAU,CAACc,MAAX,CAAkB;AAAED,QAAAA,KAAK,EAAE;AAACA,UAAAA;AAAD,SAAT;AAAkBR,QAAAA;AAAlB,OAAlB,CAAD,CAAR;AACD;AACF,GAlBD;AAmBD","sourcesContent":["import { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n\nimport { actionCreatorFactory } from \"../node_modules/typescript-fsa\";\n\nimport { IState } from \"./reducer\";\nimport { store, TStore } from \"./store\";\n\nconst actionCreator = actionCreatorFactory();\n\nexport const testAction = actionCreator.async<\n  {},\n  { testlog: string },\n  { error: any }\n>(\"TOGGLE_AUDIO_MUTING\");\n\nexport function test() {\n    return async (\n      dispatch: ThunkDispatch<TStore, void, AnyAction>,\n      getState: () => TStore\n    ) => {\n      const params = {};\n\n      try {\n        dispatch(testAction.started(params));\n\n        const state = getState()?.state;\n        console.log(state);\n\n        const result = { testlog: \"test\" };\n\n        dispatch(testAction.done({ result, params }));\n      } catch (error) {\n        dispatch(testAction.failed({ error: {error}, params }));\n      }\n    };\n  }"]},"metadata":{},"sourceType":"module"}